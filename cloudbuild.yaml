steps:
  # Collect environment variables
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: sh
    args:
      - -c
      - |
        set -euo
        get_secret() {
          secret="$( gcloud secrets versions access latest --secret="$1" --format='get(payload.data)' | tr '_-' '/+' | base64 -d )"
          if [ -z "$secret" ]; then
              if [ -z "$2" ]; then
                  gcloud builds cancel "$BUILD_ID"
                  exit -1
              else
                  secret="$2"
              fi
          fi
          echo "$secret"
        }

        echo "FIREBASE_SERVICE_ACCOUNT_CONTENT=$( get_secret _SOS_FIREBASE_SERVICE_ACCOUNT_CONTENT )" >> /workspace/.env
        echo "REDIS_PASSWORD=$( get_secret _SOS_REDIS_PASSWORD )" >> /workspace/.env
        echo "REDIS_PORT=$( get_secret _SOS_REDIS_PORT )" >> /workspace/.env
        echo "REDIS_HOST=$( get_secret _SOS_REDIS_HOST )" >> /workspace/.env

        echo "REDIS_COMMAND_TIMEOUT=$_REDIS_COMMAND_TIMEOUT" >> /workspace/.env
        echo "DEBUG=$_DEBUG" >> /workspace/.env

        cp /workspace/.env /workspace/.env.prod
        echo "REDIS_KEY_PREFIX=$_REDIS_KEY_PREFIX" >> /workspace/.env.prod
        sed -i -e :a -e '/$/N; s/\n/[{!}]/; ta' /workspace/.env.prod
  # Build container image with Docker
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - --tag
      - gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA
      - .
  # Push container image to registry
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA
  # Deploy container image to Cloud Run
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: sh
    args:
      - -c
      - |
        set -euxo
        gcloud run deploy $_SERVICE_NAME \
        --region $_REGION --platform managed \
        --set-env-vars="^[{!}]^$( cat /workspace/.env.prod )" \
        --image gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA
